### common installer functions and variables for synocommunity generic service installer
# 
# functions are common for all DSM versions
#
# The script must be sh/ash compatible and not use bash syntax.
# SRM and DSM < 6.0 have only the busybox built-in shell an not bash
# 

# Tools shortcuts
MV="/bin/mv -f"
RM="/bin/rm -rf"
CP="/bin/cp -rfp"
MKDIR="/bin/mkdir -p"
LN="/bin/ln -nsf"
TEE="/usr/bin/tee -a"
RSYNC="/bin/rsync -avh"
TAR="/bin/tar"

INST_ETC="/var/packages/${SYNOPKG_PKGNAME}/etc"
INST_VARIABLES="${INST_ETC}/installer-variables"
# DSM7 only
INST_SHARES="/var/packages/${SYNOPKG_PKGNAME}/shares"

if [ -z "${SYNOPKG_PKGVAR}" ]; then
    # define SYNOPKG_PKGVAR for compatibility with DSM7 (replaces former INST_VAR)
    SYNOPKG_PKGVAR="${SYNOPKG_PKGDEST}/var"
fi


### Functions library

log_step ()
{
    install_log "===> Step $1. STATUS=${SYNOPKG_PKG_STATUS} USER=$USER GROUP=$GROUP SHARE_PATH=${SHARE_PATH}"
}


initialize_variables ()
{
    # Expect user to be set from package specific variables
    if [ -n "${USER}" -a -z "${USER_DESC}" ]; then
        USER_DESC="User running $SYNOPKG_PKGNAME"
    fi

    # Default description if group name provided by UI
    if [ -n "${GROUP}" -a -z "${GROUP_DESC}" ]; then
        GROUP_DESC="SynoCommunity Package Group"
    fi

    # Extract share volume and share name from share path when provided, and not already defined
    if [ -n "${SHARE_PATH}" ]; then
        # migrate SHARE_PATH that holds the share name only to full share path
        # this is required for installers without resource worker for file share (SRM 1, DSM 5, DSM 6 old packages)
        if [ "$(echo ${SHARE_PATH} | grep ^/)" != "${SHARE_PATH}" ]; then
            SHARE_NAME=${SHARE_PATH}
            if [ ${SYNOPKG_DSM_VERSION_MAJOR} -lt 7 ]; then
                if synoshare --get "${SHARE_NAME}" &> /dev/null; then
                    SHARE_PATH=$(synoshare --get "${SHARE_NAME}" | awk 'NR==4' | cut -d] -f1 | cut -d[ -f2)
                    install_log "Path of existing share [${SHARE_NAME}] is [${SHARE_PATH}]"
                fi
            else
                # synoshare fails on DSM 7 (at least on 7.2.1) with "Permission denied"
                # but DSM 7 links package specific shares to the package installation folder
                if [ -d ${INST_SHARES}/${SHARE_NAME} ]; then
                    SHARE_PATH=$(realpath ${INST_SHARES}/${SHARE_NAME})
                    install_log "Path of existing share [${SHARE_NAME}] is [${SHARE_PATH}]"
                fi
            fi
            if [ ! -d "${SHARE_PATH}" ]; then
                install_log "SHARE_NAME is not an existing share [${SHARE_PATH}]."
            fi
        fi
        if [ -z "${SHARE_NAME}" ]; then
            SHARE_NAME=$(basename ${SHARE_PATH})
        fi
        install_log "Shared folder configured with SHARE_NAME [${SHARE_NAME}] and SHARE_PATH [${SHARE_PATH}]"
    fi
}


# function to read and export variables from a text file
# empty lines and lines starting with # are ignored
# we cannot 'source' the file to load the variables, when values have special characters like <, >, ...
# already defined variables are not taken from the file (e.g. variables from wizard)




