#!/bin/sh

# Exit on error
set -e

# Source service-setup script to access shared functions and variables
. "$(dirname "$0")/service-setup"

# Main preinst function
preinst_main() {
    install_log "INFO" "Starting pre-installation checks for ${PACKAGE}"
    
    # Check for DSM version compatibility
    if [ "${SYNOPKG_DSM_VERSION_MAJOR}" -lt 6 ]; then
        install_log "ERROR" "This package requires DSM 6.0 or later."
        exit 1
    fi
    
    # Check for required system resources
    check_system_requirements || exit 1
    
    # Ensure required directories exist
    ensure_required_directories || exit 1
    
    # Run service-specific pre-installation steps
    service_preinst || {
        install_log "ERROR" "Pre-installation steps failed"
        exit 1
    }
    
    install_log "INFO" "Pre-installation completed successfully"
    exit 0
}

# Check system requirements function
check_system_requirements() {
    install_log "INFO" "Checking system requirements"
    
    # Check for minimum disk space (200MB for example)
    local min_disk_space=204800  # 200MB in KB
    local available_disk
    
    # Get available disk space in KB
    if available_disk=$(df -k "${SYNOPKG_PKGDEST}" | awk 'NR==2 {print $4}'); then
        if [ "${available_disk}" -lt "${min_disk_space}" ]; then
            install_log "ERROR" "Insufficient disk space. Required: ${min_disk_space}KB, Available: ${available_disk}KB"
            return 1
        fi
        install_log "INFO" "Disk space check passed: ${available_disk}KB available"
    else
        install_log "WARNING" "Could not check available disk space. Continuing anyway."
    fi
    
    # Check for required binaries
    for cmd in openssl xxd; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            install_log "WARNING" "Command '$cmd' not found. Some functionality may be limited."
        fi
    done
    
    # Check for required ports (e.g., 8080 as defined in service-setup)
    if command -v netstat >/dev/null 2>&1; then
        if netstat -tuln | grep -q ":${SERVICE_PORT} "; then
            install_log "WARNING" "Port ${SERVICE_PORT} is already in use. The service might not start correctly."
        else
            install_log "INFO" "Port ${SERVICE_PORT} is available"
        fi
    else
        install_log "WARNING" "Could not check port availability. Continuing anyway."
    fi
    
    return 0
}

# Ensure required directories function
ensure_required_directories() {
    install_log "INFO" "Ensuring required directories exist"
    
    # These directories will be fully created in postinst,
    # but we check their parent directories here
    
    # Check package destination directory
    if [ ! -d "${SYNOPKG_PKGDEST%/*}" ]; then
        install_log "ERROR" "Package destination parent directory does not exist: ${SYNOPKG_PKGDEST%/*}"
        return 1
    fi
    
    # Check temp directory
    if [ ! -d "${SYNOPKG_TEMP_LOGDIR}" ]; then
        install_log "WARNING" "Temporary log directory does not exist: ${SYNOPKG_TEMP_LOGDIR}"
        # Try to create it if possible
        mkdir -p "${SYNOPKG_TEMP_LOGDIR}" || {
            install_log "ERROR" "Failed to create temporary log directory"
            return 1
        }
    fi
    
    install_log "INFO" "Directory checks completed successfully"
    return 0
}

# Call main function and redirect output to the Synology-provided log file
preinst_main 2>&1 | tee -a "$SYNOPKG_TEMP_LOGFILE"
